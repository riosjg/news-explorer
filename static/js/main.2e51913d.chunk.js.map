{"version":3,"sources":["components/Form.module.css","components/Header.js","components/hooks/useSelect.js","components/Form.js","components/New.js","components/NewsList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","title","className","href","useSelect","initialState","options","useState","state","setState","value","onChange","e","target","map","o","key","label","Form","setCategory","category","SelectNews","styles","searcher","onSubmit","preventDefault","heading","type","New","news","image","url","source","publishedAt","src","alt","name","rel","newsList","n","i","App","setNews","useEffect","getImages","a","length","split","replace","axios","img","data","hits","webformatURL","console","log","res","articles","fetchData","tite","NewsList","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2e51913d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"Form_heading__15QoM\",\"searcher\":\"Form_searcher__ljKRn\",\"btn-block\":\"Form_btn-block__1bJsd\"};","import React from 'react';\r\n\r\nconst Header = ({title}) => {\r\n    return ( \r\n        <nav className=\"nav-wrapper light-blue darken-3\">\r\n            <a href=\"#!\" className=\"brand-logo center\">{title}</a>\r\n        </nav>\r\n     );\r\n}\r\n \r\nexport default Header;","import React, { useState } from 'react';\r\n\r\nconst useSelect = (initialState, options) => {\r\n    \r\n    const [state, setState] = useState(initialState);\r\n\r\n    const SelectNews = () => (\r\n        <select\r\n            className=\"browser-default\"\r\n            value={state}\r\n            onChange={e => setState(e.target.value)}\r\n        >\r\n            {options.map(o => (\r\n                <option\r\n                    key={o.value}\r\n                    value={o.value}\r\n                >\r\n                    {o.label}\r\n                </option>\r\n            ))}\r\n        </select>\r\n    );\r\n    return [state, SelectNews];\r\n}\r\n \r\nexport default useSelect;","import React from 'react';\r\nimport styles from './Form.module.css';\r\nimport useSelect from './hooks/useSelect';\r\n\r\nconst Form = ({setCategory}) => {\r\n\r\n    const options = [\r\n        { value: 'world', label: 'World'},\r\n        { value: 'nation', label: 'Nation'},\r\n        { value: 'business', label: 'Business'},\r\n        { value: 'technology', label: 'Technology'},\r\n        { value: 'entertainment', label: 'Entertainment'},\r\n        { value: 'sports', label: 'Sports'},\r\n        { value: 'science', label: 'Science'},\r\n        { value: 'health', label: 'Health'}\r\n    ]\r\n\r\n    const [category, SelectNews] = useSelect('general', options);\r\n\r\n    const searchNews = e => {\r\n        e.preventDefault();\r\n        \r\n        setCategory(category)\r\n    }\r\n\r\n    return ( \r\n        <div className={`${styles.searcher} row`}>\r\n            <div className=\"col s12 m8 offset-m2\">\r\n                <form\r\n                    onSubmit={searchNews}\r\n                >\r\n                    <h2 className={styles.heading}>Find news by category</h2>\r\n                    <SelectNews />\r\n                    <div className=\"input-field col s12\">\r\n                        <input\r\n                            type=\"submit\"\r\n                            className={`${styles['btn-block']} btn-large amber darken-2`}\r\n                            value=\"Search\"\r\n                        />\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n\r\n     );\r\n}\r\n \r\nexport default Form;","import React from 'react';\r\n\r\nconst New = ({news}) => {\r\n    const {image, title, url, source, publishedAt} = news;\r\n    return ( \r\n        <div className=\"col s12 m6 l4\">\r\n            <div className=\"card\">\r\n                <div className=\"card-image\">\r\n                <img src={image} alt={title}/>\r\n                </div>\r\n                <div className=\"card-content\">\r\n                    <h4>{title}</h4>\r\n                    <p>{source.name} - {publishedAt}</p>\r\n                </div>\r\n                <div className=\"card-action\">\r\n                    <a\r\n                        href={url}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        className=\"waves-effect waves-light btn\"\r\n                    >See full news</a>\r\n                </div>\r\n            </div>\r\n        </div> );\r\n}\r\n \r\nexport default New;","import React from 'react';\r\nimport New from './New';\r\n\r\nconst newsList = ({news}) => (\r\n    <div className=\"row\">\r\n        {news.map((n,i) => (\r\n            <New\r\n                key={i}\r\n                news={n}\r\n            />\r\n        ))}\r\n    </div>\r\n);\r\n \r\nexport default newsList;","import React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Form from './components/Form';\nimport NewsList from './components/NewsList';\nimport axios from 'axios'\n\nfunction App() {\n\n  const [category, setCategory] = useState('');\n  const [news, setNews] = useState([]);\n\n  useEffect( () => {\n    const fetchData = async () => {\n      if(category === ''){\n        return;\n      }\n      console.log('this is executing now');\n      const url = `https://gnews.io/api/v3/topics/${category}?country=ar&token=4613f7b9a1296557942c0c8934f4d6ab`\n      const res = await axios(url);\n      let news = res.data.articles\n      async function getImages (){\n        for(let i=0; i<news.length; i++ ){\n        var title = ( news[i].title.split(' ') )[0].replace(/\\W/g, '');\n        const img = await axios(`https://pixabay.com/api/?key=17467266-d5099eb65c4132662c6a98cb3&q=${title}&image_type=photo&per_page=3`);\n        news[i].image = img.data.hits[0] ? img.data.hits[0].webformatURL : 'https://picsum.photos/200'\n        }\n      }\n      await getImages();\n      console.log(news)\n      setNews(news);\n    }\n    fetchData();\n  }, [category])\n\n\n  return (\n    <>\n      <Header\n        tite='News Explorer'\n      />\n      <div className=\"container white\">\n        <Form \n          setCategory={setCategory}\n        />\n        <NewsList\n          news={news}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}